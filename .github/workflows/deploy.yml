name: Deploy Drupal Site

on:
  push:
    branches:
      - main
    paths:
      - 'web/**'
      - 'drupal/**'
      - 'composer.json'
      - 'composer.lock'
      - '.github/workflows/deploy.yml'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repo
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Install Tailscale
      - name: Install Tailscale
        run: |
          curl -fsSL https://tailscale.com/install.sh | sh
          sudo tailscaled &
          sleep 5

      # 3. Connect to Tailnet
      - name: Connect to Tailnet
        env:
          TAILSCALE_AUTHKEY: ${{ secrets.TAILSCALE_AUTHKEY }}
        run: |
          sudo tailscale up --authkey=${TAILSCALE_AUTHKEY} --hostname=github-runner --timeout=30s || true
          tailscale status || true

      # 4. Test SSH connection
      - name: Test SSH connection
        id: sshcheck
        continue-on-error: true
        env:
          SSH_PRIVATE_KEY: ${{ secrets.HOMELAB_SSH_KEY }}
          SSH_USER: ${{ secrets.HOMELAB_SSH_USER }}
          SSH_HOST: ${{ secrets.HOMELAB_TAILSCALE_IP }}
        run: |
          mkdir -p ~/.ssh
          echo "${SSH_PRIVATE_KEY}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $SSH_HOST >> ~/.ssh/known_hosts

          echo "Testing SSH connectivity..."
          for i in {1..10}; do
            if ssh -o ConnectTimeout=5 -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa $SSH_USER@$SSH_HOST "echo Connected"; then
              echo "SSH_OK=true" >> $GITHUB_ENV
              exit 0
            fi
            echo "SSH not ready yet, retrying ($i/10)..."
            sleep 5
          done

          echo "SSH_OK=false" >> $GITHUB_ENV
          echo "⚠️ Could not connect to SSH host."
          exit 0

            # 5. Deploy Drupal site
      - name: Deploy Drupal via SSH
        if: success()
        env:
          SSH_PRIVATE_KEY: ${{ secrets.HOMELAB_SSH_KEY }}
          SSH_USER: ${{ secrets.HOMELAB_SSH_USER }}
          SSH_HOST: ${{ secrets.HOMELAB_TAILSCALE_IP }}
        run: |
          mkdir -p ~/.ssh
          echo "${SSH_PRIVATE_KEY}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $SSH_HOST >> ~/.ssh/known_hosts

          echo "🚀 Deploying Drupal code..."
          
          # --- Ensure rsync is installed on the remote host ---
          echo "🔧 Checking for rsync on remote host..."
          ssh -i ~/.ssh/id_rsa $SSH_USER@$SSH_HOST 'command -v rsync >/dev/null 2>&1 || { echo "rsync not found, installing..."; sudo apt-get update -qq && sudo apt-get install -y rsync; }'
          echo "✅ rsync ready."

          # --- Copy code to remote host ---
          echo "--- Copying code to host ---"
          rsync -az --delete -e "ssh -i ~/.ssh/id_rsa" ./ $SSH_USER@$SSH_HOST:/opt/drupal_deploy_tmp/

          # --- Run deployment inside container ---
          echo "--- Running deployment steps inside container ---"
          ssh -i ~/.ssh/id_rsa $SSH_USER@$SSH_HOST << 'EOF'
            set -e

            # Copy files into container's Drupal directory
            docker exec -i -u root homesite bash -c "rm -rf /var/www/html/* && cp -r /opt/drupal_deploy_tmp/* /var/www/html/ && chown -R www-data:www-data /var/www/html"

            # Install unzip & apache2-utils (for Composer + Drupal tools)
            docker exec -i -u root homesite bash -c "apt-get update -qq && apt-get install -y unzip apache2-utils"

            # Move into Drupal directory
            docker exec -i homesite bash -c "cd /opt/drupal && composer clear-cache && composer config --no-plugins allow-plugins.drupal/core-composer-scaffold true && composer install --no-interaction --prefer-dist --no-dev"

            # Run Drush commands as www-data
            docker exec -i -u www-data homesite bash -c "cd /opt/drupal && drush cim -y && drush updb -y && drush cr"

            echo "✅ Deployment complete."
          EOF


      # 6. Skip message if offline
      - name: 💤 Homelab offline, skipping deploy
        if: env.SSH_OK != 'true'
        run: echo "Homelab unreachable, skipping deployment safely."
